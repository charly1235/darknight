#include<windows.h>  // Para usar Sleep
#include<stdio.h>    // I/O
#include<stdlib.h>   // para usar Rand / system 
#include<string.h>   // para usar Cadenas de caracteres (nombres)

int tiro(int cas);   // Definir la funcion de tiro
void winer();        // Definir la funcion que decidira quien gana
void matriz();       // Definir la funcion que imprimira la matriz  
int f;               // fila
int c;               // columna
int x,y,casilla;     // x y = iteradores para la matriz (for)
char M[3][3], modo;  // Matriz principal / Modo de juego 
char j1[8];          // vector Nombre del jugador uno
char j2[8]="CPU";          // vector nombre jugador 2 string
int A[3][3];         // Matriz Para demostracion (numeros)
int ganador=0;       // Estado del ganador
int turno=1;         // Estado del turno de tiro
int tirocpu;         // tiro del cpu


/*---------------------Inicio del programa ------------------*/

int main(){
// Presentacion del juego 
printf("\t\t\t\t\t\t #Bienvenido al juego del gato# \n\n");     
printf("\t\t\t\t\t\t  (=^-^=) Gatos Jazz (=^-^=) \n\n");         
printf("\t\t\t\t\t\t\t   /%c ____/%c \n",92,92) ;
printf("\t\t\t\t\t\t\t  (  o   o  )\n" );
printf("\t\t\t\t\t\t\t   %c =>#<= / \n",92);
printf("\t\t\t\t\t\t\t   /       %c \n",92);
printf("\t\t\t\t\t\t\t  /         %c     ^ \n",92);
printf("\t\t\t\t\t\t\t |           |   // \n");
printf("\t\t\t\t\t\t\t  %c         /   //\n",92);
printf("\t\t\t\t\t\t\t   ///  ///  --   \n");

for(x=0;x<3;x++){
	printf("\t\t\t\t\t\t ");
    for(y=0;y<3;y++){                // Matriz principal vacia
        M[x][y]=' ';                 
        }
printf("\n");
}

printf("Para jugar P vs P presiona: P \n");
printf("Para jugar P vs CPU presiona: C \n");      // Menu
printf("Para Salir del juego preiona: E \n");
scanf("%c",&modo);

// ternmina la presentacion


// Player vs Player

if(modo=='P' || modo=='p'){
	system("cls");
	printf("\t\t\t\t Modo Player vs Player \n");
	printf("\n Jugador 1, Ingresa tu nombre : ");  //
	scanf("%s",&j1);                      		   // 
	printf("\n Ok \n");							   //  Guardar los nombres de los jugadores
	printf("\n Jugador 2, Ingresa tu nombre : ");  //
	scanf("%s",&j2);                               //
	printf("\n Ok \n");
	Sleep(2000);
	system("cls");
	
	int per=0;  // un contador 
	printf("\t Digita el numero de casilla donde quieras tirar como se muestra a continuacion:\n");
	for(x=0;x<3;x++){              //
	printf("\t\t\t\t\t\t ");       //
    for(y=0;y<3;y++){              // 
    	per=per+1;				   //
        A[x][y]=per;               //   Imprimir Matriz de numeros 
        printf("|%d|",A[x][y]);    //
        }                          //
printf("\n");                      //
}                                  //
	system("pause");
	matriz();                      // Funcion Para imprimir matriz 
	
	do{
		//TURNO DEL JUGADOR 1 X
		if(turno==1){
			if(ganador==0){ // para No volver a repetir el ciclo si alguien gana antes 
			do {
			printf("\n%s",j1);
			printf("\nDigita la casilla en la que quieras tirar: ");
			scanf("%d",&casilla);      // leer la casilla
			tiro(casilla);	           //  posicionar el tiro 
				if(M[f][c]=='X' || M[f][c]=='O'){
       			 printf("\n Vuelve a tirar .\n"); 
       			 Sleep(3000);
       			 matriz();             // imprimir matriz 
           	    }
			}while(M[f][c]=='X' || M[f][c]=='O'); // el espacio este ocupado 
			
			M[f][c]='X';
			matriz();
       		turno=2;
       		winer();  // salir wn cuanto uno gane
			} 
			
		} // fin del turno del jugador 1 
		       

		// TURNO DEL JUGADOR 2
		if(turno==2){
			if(ganador==0){
			do {
			printf("\n%s",j2);
			printf("\nDigita la casilla en la que quieras tirar: ");
			scanf("%d",&casilla);
			tiro(casilla);	 
				if(M[f][c]=='X' || M[f][c]=='O'){
           		 printf("\n Vuelve a tirar .\n");
           		 matriz();
           	    }
			}while(M[f][c]=='X' || M[f][c]=='O');
		M[f][c]='O';
		matriz();
       	turno=1;
       	winer();
		}
	}	
	}while(ganador==0); // Mientras no haya ganador 
	
  } // Fin del if (fin del modo P vs P)
  
  
  // Modo Player vs CPU
  
if(modo=='C'|| modo=='c'){
	system("cls");
	printf("\t\t\t\t\t Modo Player vs CPU");
	printf("\n Jugador 1, Ingresa tu nombre : ");
	scanf("%s",&j1);
	printf("\n ok \n");
	printf("\n Jugador 2, Ingresa tu nombre :%s \n",j2);
	Sleep(2000);
	system("cls");
	int per=0;
	printf("\t Digita el numero de casilla donde quieras tirar como se muestra a continuacion:\n");
	for(x=0;x<3;x++){
	printf("\t\t\t\t\t\t ");
    for(y=0;y<3;y++){
    	per=per+1;
        A[x][y]=per;                 // cambiar por formato 
        printf("|%d|",A[x][y]); 
        }
printf("\n");
}
	system("pause");
	
	matriz();   // imprimir matriz 
	
	do{
	// turno del jugador 1
	if(turno==1){
		if(ganador==0){
		  do {
			printf("\n%s",j1);
			printf("\nDigita la casilla en la que quieras tirar: ");
			scanf("%d",&casilla);
			tiro(casilla);	           //  posicionar el tiro 
			   if(M[f][c]=='X' || M[f][c]=='O'){
           			 printf("\n Vuelve a tirar .\n"); //
           			 matriz(); // imprimir matriz 
           	    }
			}while(M[f][c]=='X' || M[f][c]=='O');
			M[f][c]='X';
			matriz();
       		turno=2;
       		winer();
		}
	}
	// Tiro del CPU
	
	if(turno==2){
		if(ganador==0){
		printf("\n Turno del %s \n",j2);
		Sleep(1000);
			do{	
			tirocpu=rand() % 10; // generar un tiro aleatorio de 1-9
			tiro(tirocpu);
				if(M[f][c]=='X' || M[f][c]=='O' ){
				 matriz(); // imprimir matriz 
			     }
		    }while(M[f][c]=='X' || M[f][c]=='O' );
		 	M[f][c]='O';
			matriz();
       		turno=1;
       		winer();
       	}
   }
  }while(ganador==0);
 }
 
}


/* --------------Funciones -----------*/
 
void matriz(){
   system("cls");
   printf("\n\n");
	for(x=0;x<3;x++){
		printf("\t\t"); 
       for(y=0;y<3;y++){                //  Impresion de Matriz 
        printf("|%c|",M[x][y]);
        }
  	printf("\n");
 	}
}

// Funcion para determinar el ganador 
void winer(){
int cruces, circulos;
char won;
char caso;

// Horizontales 

for(x=0;x<3;x++){
	cruces=0;
	circulos=0;
    for(y=0;y<3;y++){
    won=M[x][y];
        if(won=='X'){
    	cruces=cruces+1;
    	}
    	if(won=='O'){
    	circulos=circulos+1;
    	}
		if(cruces==3){
			printf("\n FELICIDADES %s Has ganado",j1); 
			ganador=1;
		}
		if(circulos==3){
			printf("\n FELICIDADES %s Has ganado",j2); 
			ganador=1;
		}	
	}
}

// verticales

for(y=0;y<3;y++){
	cruces=0;
	circulos=0;
    for(x=0;x<3;x++){
    won=M[x][y];
        if(won=='X'){
    	cruces=cruces+1;
    	}
    	if(won=='O'){
    	circulos=circulos+1;
    	}
		if(cruces==3){
			printf("\n FELICIDADES %s Has ganado",j1); 
			ganador=1;
		}
		if(circulos==3){
			printf("\n FELICIDADES %s Has ganado",j2); 
			ganador=1;
		}	
	}
}

//Diagonales secundaria

if(M[0][2]==M[1][1] && M[1][1]==M[2][0]){
caso=M[1][1];
	if(caso=='X'){
		printf("\n FELICIDADES %s Has ganado",j1); 
		ganador=1;
	}
		if(caso=='O'){
		printf("\n FELICIDADES %s Has ganado",j2);
		ganador=1;
	}
	
}

// Otra diagonal 

 if(M[0][0]==M[1][1] && M[1][1]==M[2][2]){
 caso=M[1][1];
	if(caso=='X'){
		printf("\n FELICIDADES %s Has ganado",j1);
		ganador=1;
	}
		if(caso=='O'){
		printf("\n FELICIDADES %s Has ganado",j2);
		ganador=1;
	}
	
 }
 
 // Empate
  
 int cont=0;
 for(x=0;x<3;x++){ 
       for(y=0;y<3;y++){                 
        char cupo=M[x][y];
        if(cupo=='X'|| cupo=='O'){
        	cont=cont+1;
        }
        }
 	}
 	
if(cont==9 && ganador==0){
	printf("Empate");
	ganador=1;
}
 
 
}// termina la funcion winer 

// SELECCION DE CASILLA
int tiro(int cas){
	switch(cas){
		case 1: 
		f=0;
		c=0;
		break;
		case 2:
		f=0;
		c=1;
		break;
		case 3: 
		f=0;
		c=2;
		break;
		case 4:
		f=1;
		c=0;
		break;
		case 5: 
		f=1;
		c=1;
		break;
		case 6:
		f=1;
		c=2;
		break;
		case 7: 
		f=2;
		c=0;
		break;
		case 8:
		f=2;
		c=1;
		break;
		case 9: 
		f=2;
		c=2;
		break;
		default:
		printf("Casilla no permitida");	
		break;	
	}	
}
